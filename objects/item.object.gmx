<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hsp = 0
vsp = 0
grav = hex(0,0,2,8,0) 
facing = choose(1,-1)
carried = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !variable_instance_exists(id,"carried") carried = 0
depth = -1
if place_meeting(x,y,block) depth = 1
if carried
    {
    x=-256
    y=-256
    visible = 0
    persistent = true
    }
else if global.menu == 0
    {
    visible = 1
    persistent = false
    if variable_instance_exists(id,"moves")
        {
        //bump
        if moves = "bump"
            {
            if hsp == 0
                {
                if place_meeting(x+facing,y,bumpblock) and variable_instance_exists(id,'bashes')
                    {
                    with instance_place(x+facing,y,bumpblock)
                        {
                        vsp = -2
                        bumping = 1
                        }
                    }
                facing *= -1
                }
            hsp = maxspd
            vsp += grav
            if vsp &gt; 4.5 vsp = 4
            move_x(hsp)
            move_y(vsp)
            }
        
        }
    if variable_instance_exists(id,"still")
        {
        vsp += grav
        if vsp &gt; 4.5 vsp = 4
        hsp *= 0.9
        if abs(hsp) &lt; 0.05 hsp = 0
        if place_meeting(x,y+1,block) 
            {
            if hsp &gt; 1 move_x(hsp)
            }
        else move_x(hsp)
        move_y(vsp)
        }
        
        
        
    if variable_instance_exists(id,"undersides")
        {
        if place_meeting(x,y,enemy)
            {
            with instance_place(x,y,enemy)
                {
                underside()
                audio_play_sound(sfx_bonk,0,0)
                }
            }
            
        if place_meeting(x,y,shellmove)
            {
            with instance_place(x,y,shellmove)
                {
                underside()
                }
            underside()
            audio_play_sound(sfx_bonk,0,0)
            }
            
        if place_meeting(x,y,shell)
            {
            with instance_place(x,y,shell)
                {
                underside()
                audio_play_sound(sfx_bonk,0,0)
                }
            }
        }    
    
    if place_meeting(x,y,mario)
        {
        if mario.vsp &gt; vsp
            {
            if variable_instance_exists(id,'bounce') and place_meeting(x,y+1,block)
                {
                mario.vsp = -(mario.vsp % 1)-3.5
                while place_meeting(x,y,mario) 
                    {
                    with mario if place_meeting(x,y-0.1,block) break
                    else mario.y -= 0.1
                    }
                }
            if variable_instance_exists(id,"stomped") and place_meeting(x,y+1,block)
                {
                instance_destroy()
                with instance_create(x,y,stomped)
                    {
                    audio_play_sound(sfx_bonk,0,0)
                    vsp = other.vsp
                    hsp = other.hsp
                    facing = other.facing
                    if variable_instance_exists(id,"moves")
                        {
                        if moves = "bump" facing = -mario.facing
                        }
                    }
                }
            if variable_instance_exists(id,'hurttop')
                {
                hurt()
                }
            }
        else 
            {
            if variable_instance_exists(id,'hurts')
                {
                hurt()
                }
            }
        }
    
    if variable_instance_exists(id,'destroyatdistance')
        {
        if distance_to_object(mario) &gt; 1024 instance_destroy()
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.menu = 0
if variable_instance_exists(id,"edible") consume()
if variable_instance_exists(id,"throwstomp")
    {
    with mario invent_delete(menuselect)
    instance_destroy()
    with instance_create(mario.x,mario.y,stomped)
        {
        while place_meeting(x,y,mario)
            {
            if place_meeting(x+facing,y,block) break
            else x += facing
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if variable_instance_exists(id,"throws")
    {
    if mario.runpress
        {
        with instance_create(mario.x+8,mario.y+8,throws)
            {
            facing = mario.facing
            team = 1
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if variable_instance_exists(id,"directional") draw_sprite_ext(sprite_index,image_index,round(x-(facing-1)*(sprite_width-sprite_xoffset)/2),round(y),facing,1,0,c_white,1)
else draw_self()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
