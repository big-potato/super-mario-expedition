<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>locktime = 0
statetime = 0
facinglock = 0
facing = choose(1,-1)
grav = hex(0,0,2,8,0)
hsp = 0
vsp = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//home.guys --
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>prevfacing = facing
if !variable_instance_exists(id,"frames") frames = image_speed
image_speed = 0

if !place_meeting(x,y,block) depth = -1
if place_meeting(x,y,blaster) depth = 1

if global.menu == 0
    {
    image_speed = frames
    //tactics ---------------------------------------------
    if variable_instance_exists(id,"walks") and place_meeting(x,y+1,block)
        {
        if state == "patrol"
            {
            if variable_instance_exists(id,"edges")
                {
                if !place_meeting(x+hsp*facing*8,y+1,block)
                    {
                    facing *= -1
                    }
                }
            if irandom(600) == 0
                {
                facing *= -1
                }
            if abs(x-mario.x) &lt; 64 and variable_instance_exists(id,"combats") state = "combat"
            }
        
        else if state == "guard"
            {
            if variable_instance_exists(id,"edges")
                {
                if !place_meeting(x+hsp*facing*8,y+1,block)
                    {
                    facing *= -1
                    }
                }
            if irandom(40) == 0
                {
                facing *= -1
                }
            if abs(x-mario.x) &lt; 64 and variable_instance_exists(id,"combats") state = "combat"
            if statetime == 0 and variable_instance_exists(id,"patrols") state = "patrol"
            }
        
        else if state == "combat"
            {
            if variable_instance_exists(id,"edges")
                {
                if !place_meeting(x+hsp*facing*8,y+1,block) and mario.y &lt;= y
                    {
                    facing *= -1
                    facinglock = 1
                    locktime = 30
                    }
                }
            //avoid stomps
            if variable_instance_exists(id,'stomped')
                {
                //down and towards
                if mario.vsp &gt; 0 &amp;&amp; sign(x-mario.x) == mario.facing &amp;&amp; y &gt; mario.y and !facinglock
                    {
                    facing = mario.facing
                    }
                else if !facinglock and !collision_line((bbox_left+bbox_right)/2,(bbox_top+bbox_bottom)/2,(mario.bbox_left+mario.bbox_right)/2,(mario.bbox_top+mario.bbox_bottom)/2,block,false,false)
                    {
                    facing = sign(mario.x-x)
                    }
                }
            else
                {
                if !facinglock and !collision_line((bbox_left+bbox_right)/2,(bbox_top+bbox_bottom)/2,(mario.bbox_left+mario.bbox_right)/2,(mario.bbox_top+mario.bbox_bottom)/2,block,false,false)
                    {
                    facing = sign(mario.x-x)
                    }
                }
            
            if abs(x-mario.x) &gt; 96 
                {
                state = "guard"
                statetime = 1200
                }
            }
        
        
        if facing != prevfacing hsp *= -1
        }
    
    
    //moves -----------------------------------------
    if variable_instance_exists(id,"walks")
        {
        if hsp == 0
            {
            facing *= -1
            facinglock = 1
            locktime = 30
            }
        if locktime &lt;= 0 facinglock = 0
        if hsp &lt; maxspd and place_meeting(x,y+1,block) hsp += 0.25
        if hsp == 0 hsp = 0.25
        }
    if variable_instance_exists(id,"falls")
        {
        vsp += grav
        if vsp &gt; 4.5 vsp = 4
        }
    if variable_instance_exists(id,"linear")
        {
        hsp = 0
        vsp = 0
        x += maxspd*facing
        }
    move_x(hsp)
    move_y(vsp)
    
    
    
    
    //interacts -----------------------------------------
    if place_meeting(x,y,mario) and mario.state != "piping"
        {
        if mario.vsp2 &gt; vsp and (bbox_top+bbox_bottom)/2 &gt;= mario.bbox_bottom
            {
            if variable_instance_exists(id,'bounce')
                {
                mario.vsp = -(mario.vsp % 1)-3.5
                with mario
                    {
                    while place_meeting(x,y,other)
                        {
                        if place_meeting(x,y-0.1,block) break
                        else y -= 0.1
                        }
                    }
                }
            if variable_instance_exists(id,"stomped")
                {
                instance_destroy()
                with instance_create(x,y,stomped)
                    {
                    vsp = other.vsp
                    hsp = other.hsp
                    facing = other.facing
                    }
                }
            if variable_instance_exists(id,'hurttop')
                {
                hurt()
                }
            }
        else 
            {
            if variable_instance_exists(id,'hurts')
                {
                hurt()
                }
            }
        }
        
    locktime --
    statetime --
    }
if variable_instance_exists(id,'destroyatdistance')
    {
    if distance_to_object(mario) &gt; 1024 instance_destroy()
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if variable_instance_exists(id,"directional") draw_sprite_ext(sprite_index,image_index,round(x-(facing-1)*(sprite_width-sprite_xoffset)/2),round(y),facing,1,0,c_white,1)
else draw_self()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
