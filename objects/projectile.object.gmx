<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grav = 0.2
hsp = 4
vsp = 0

team = 0

jspd = 0
falls = false
wallthrough = false
jumpy = false
wallbounce = false
directional = true
bashes = false
fire = false
destructible = false
duration = false
release = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>animpause()
if !global.menu
    {
    duration -= 1/room_speed
    if duration == 0 instance_destroy()
    
    if place_meeting(x,y,block) and !wallthrough instance_destroy()
    fall()
    
    if wallthrough
        {
        x += hsp*facing
        y += vsp
        }
    else for(i=0;i&lt;16;i++)
        {
        if place_meeting(x+hsp*facing/16,y,block) 
            {
            if !wallbounce
                {
                instance_destroy()
                if release != false instance_create(x,y,release)
                audio_play_sound(sound,0,false)
                break;
                }
            else facing *= -1
            }
        x += hsp*facing/16
        if place_meeting(x,y+vsp/16,surface)
            {
            if vsp &gt; 0
                {
                if jumpy vsp = -jspd
                else
                    {
                    instance_destroy()
                    if release != false instance_create(x,y,release)
                    audio_play_sound(sound,0,false)
                    break;
                    }
                }
            else if place_meeting(x,y+vsp/16,block)
                {
                if wallbounce vsp = -vsp
                else
                    {
                    instance_destroy()
                    if release != false instance_create(x,y,release)
                    audio_play_sound(sound,0,false)
                    break;
                    }
                }
            }
        y += vsp/16
        }
    
    target = 0
    if place_meeting(x,y,item) target = instance_place(x,y,item)
    if team != -1 and place_meeting(x,y,enemy) target = instance_place(x,y,enemy)
    if team != 1 and place_meeting(x,y,mario) target = instance_place(x,y,mario)
    if target != 0
        { 
        if target.projectiledestroy and destructible instance_destroy()
        if target.object_index == mario
            {
            if fire
                {
                with mario burn()
                }
            else ouch()
            }
        else
            {
            with target
                {
                if other.fire
                    {
                    if burned != false
                        {
                        instance_destroy(other,true)
                        if burned != nothing 
                            {
                            with instance_create(x,y,burned)
                                {
                                vsp = other.vsp
                                hsp = other.hsp
                                facing = other.facing
                                }
                            instance_destroy()
                            }
                        underside()
                        }
                    }
                else if object_is_ancestor(object_index,enemy) underside()
                }
            }  
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if directional draw_sprite_ext(sprite_index,image_index,round(x-(facing-1)*(sprite_width-sprite_xoffset)/2),round(y),facing,1,0,c_white,1)
else draw_self()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
