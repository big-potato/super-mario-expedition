<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_wview[0] = 512
view_hview[0] = 288
view_wport[0] = view_wview[0]*2
view_hport[0] = view_hview[0]*2
window_set_size(view_wport[0],view_hport[0])

view_xview[0] = (mario.bbox_left+mario.bbox_right-view_wview[0])/2
view_yview[0] = (mario.bbox_top+mario.bbox_bottom-view_hview[0])/2
hsp = 0
vsp = 0
focusinside = 256 + 16*mario.facing - mario.facing*mario.hsp*64
focusoutside = 256 - 16*mario.facing*5 - mario.facing*mario.hsp*64
playery = (mario.bbox_top+mario.bbox_bottom)/2-view_yview[0]
edgetimer = 0

global.font = font_add_sprite(spr_font,30,true,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_deactivate_object(enemy)
instance_deactivate_object(blaster)
instance_activate_region(view_xview[0]-64,view_yview[0]-64,view_wview[0]+128,view_hview[0]+128,true)
instance_activate_object(bill)
instance_activate_object(lakitu)

if mario.hp &gt; 0 and !global.menu
    {
    longfall = 0
    if edgetimer &gt; 30 longfall = 1
    if !collision_line((mario.bbox_left+mario.bbox_right)/2, mario.bbox_bottom,(mario.bbox_left+mario.bbox_right)/2, view_yview[0]+view_hview[0]-16,block,0,0) and mario.vsp &gt;= 4 longfall = 1
    if (longfall or !collision_rectangle((mario.bbox_left+mario.bbox_right)/2+17*mario.facing, mario.bbox_bottom,(mario.bbox_left+mario.bbox_right)/2+15*mario.facing, view_yview[0]+view_hview[0]-16,block,0,0)) and mario.vsp == 0 and mario.hsp == 0 edgetimer ++
    else edgetimer = 0
    
    
    focustop = 160-96*longfall
    focusbottom = 176-96*longfall
    panictop = 72
    panicbottom = 176
    
    playerx = (mario.bbox_left+mario.bbox_right)/2-view_xview[0]
    if longfall or mario.state != "jumping" or mario.bbox_bottom-view_yview[0] &lt; panictop or mario.bbox_top-view_yview[0] &gt; panicbottom playery = (mario.bbox_top+mario.bbox_bottom)/2
    
    focusinside = 256 - 16*mario.facing - mario.facing*mario.hsp*64
    focusoutside = 256 - 16*mario.facing*5 - mario.facing*mario.hsp*64
    
    
    if (playerx &gt; focusinside and playerx &gt; focusoutside) or (playerx &lt; focusinside and playerx &lt; focusoutside)
        {
        if abs(playerx-focusinside) &lt; abs(playerx-focusoutside) view_xview[0] += (playerx-focusinside)/32
        else view_xview[0] += (playerx-focusoutside)/32
        }
    
    if playery-view_yview[0] &gt; focusbottom view_yview[0] += (playery-view_yview[0]-focusbottom)/16
    if playery-view_yview[0] &lt; focustop view_yview[0] += (playery-view_yview[0]-focustop)/16
    }

if room_width &gt; view_wview[0]
    {
    if view_xview[0] &lt; 0 view_xview[0] = 0
    if view_xview[0] &gt; room_width-view_wview[0] view_xview[0] = room_width-view_wview[0]
    }
else view_xview[0] = (room_width-view_wview[0])/2

if room_width &gt; view_wview[0]
    {
    if view_yview[0] &lt; 0 view_yview[0] = 0
    if view_yview[0] &gt; room_height-view_hview[0] view_yview[0] = room_height-view_hview[0]
    }
else view_yview[0] = (room_height-view_hview[0])/2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_line_colour(view_xview[0]+focusinside ,view_yview[0],view_xview[0]+focusinside ,view_yview[0]+view_hview[0],c_white,c_white)
//draw_line_colour(view_xview[0]+focusoutside,view_yview[0],view_xview[0]+focusoutside,view_yview[0]+view_hview[0],c_white,c_white)
//draw_line_colour(view_xview[0],view_yview[0]+focustop,view_xview[0]+view_wview[0],view_yview[0]+focustop,c_white,c_white)
//draw_line_colour(view_xview[0],view_yview[0]+focusbottom,view_xview[0]+view_wview[0],view_yview[0]+focusbottom,c_white,c_white)
//draw_line_colour(view_xview[0],view_yview[0]+panictop,view_xview[0]+view_wview[0],view_yview[0]+panictop,c_yellow,c_yellow)
//draw_line_colour(view_xview[0],view_yview[0]+panicbottom,view_xview[0]+view_wview[0],view_yview[0]+panicbottom,c_yellow,c_yellow)
//draw_line_colour(view_xview[0],playery,view_xview[0]+view_wview[0],playery,c_red,c_red)
draw_set_color(c_black)
if view_xview[0]&lt;0 draw_rectangle(view_xview[0],view_yview[0],0,view_yview[0]+view_hview[0],false)
if view_yview[0]&lt;0 draw_rectangle(view_xview[0],view_yview[0],view_xview[0]+view_wview[0],0,false)
if view_xview[0]+view_wview[0]&gt;room_width draw_rectangle(room_width,0,view_xview[0]+view_wview[0],view_yview[0]+view_hview[0],false)
if view_yview[0]+view_hview[0]&gt;room_height draw_rectangle(0,room_height,view_xview[0]+view_wview[0],view_yview[0]+view_hview[0],false)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
